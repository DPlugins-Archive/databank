version: "3.8"

services:
  php:
    build:
      context: .
      target: api_platform_php
    restart: unless-stopped
    volumes:
      - php_socket:/var/run/php
    healthcheck:
      interval: 10s
      timeout: 3s
      retries: 3
      start_period: 30s

  caddy:
    build:
      context: .
      target: api_platform_caddy
    depends_on:
      - php
    environment:
      SERVER_NAME: ${SERVER_NAME:-localhost, caddy:80}
      MERCURE_PUBLISHER_JWT_KEY: ${MERCURE_PUBLISHER_JWT_KEY:-!ChangeMe!}
      MERCURE_SUBSCRIBER_JWT_KEY: ${MERCURE_SUBSCRIBER_JWT_KEY:-!ChangeMe!}
    restart: unless-stopped
    volumes:
      - php_socket:/var/run/php
      - caddy_data:/data
      - caddy_config:/config
    ports:
      # HTTP
      - target: 80
        published: 80
        protocol: tcp
      # HTTPS
      - target: 443
        published: 443
        protocol: tcp
      # HTTP/3
      - target: 443
        published: 443
        protocol: udp

  # database:
  #   image: postgres:${POSTGRES_VERSION:-14}-alpine
  #   environment:
  #     POSTGRES_DB: ${POSTGRES_DB:-app}
  #     # You should definitely change the password in production
  #     POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-ChangeMe}
  #     POSTGRES_USER: ${POSTGRES_USER:-symfony}
  #   volumes:
  #     - db_data:/var/lib/postgresql/data:rw
  #     # you may use a bind-mounted host directory instead, so that it is harder to accidentally remove the volume and lose all your data!
  #     # - /docker/db/data:/var/lib/postgresql/data:rw

  pgbouncer:
    image: bitnami/pgbouncer:latest
    depends_on:
      - database
    environment:
      POSTGRESQL_USERNAME: ${POSTGRES_USER:-symfony}
      POSTGRESQL_PASSWORD: ${POSTGRES_PASSWORD:-ChangeMe}
      POSTGRESQL_DATABASE: ${POSTGRES_DB:-app}
      POSTGRESQL_HOST: database
      PGBOUNCER_DATABASE: ${POSTGRES_DB:-app}
    ports:
      - "6432:6432"

volumes:
  caddy_data:
  caddy_config:
  # db_data:
  php_socket:
